{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-accordion_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-88bdeaae.js';\nimport { i as chevronDown } from './index-d74f4afc.js';\nimport { c as config, b as getIonMode } from './ionic-global-00475c3a.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers-4d272360.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nconst Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.updateListener = () => this.updateState(false);\n    this.state = 1 /* Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    this.toggleIcon = chevronDown;\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    this.toggleIconSlot = 'end';\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      const ionItem = slot.assignedElements &&\n        slot.assignedElements().find((el) => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      const { contentEl, contentElWrapper } = this;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        this.state = 4 /* Expanded */;\n        return;\n      }\n      if (this.state === 4 /* Expanded */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      const { contentEl } = this;\n      if (initialUpdate || contentEl === undefined) {\n        this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* Collapsed */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n  }\n  connectedCallback() {\n    var _a;\n    const accordionGroupEl = (this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group'));\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* Expanding */,\n        'accordion-expanded': this.state === 4 /* Expanded */,\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true),\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: (headerEl) => (this.headerEl = headerEl) }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: (contentEl) => (this.contentEl = contentEl) }, h(\"div\", { id: \"content-wrapper\", ref: (contentElWrapper) => (this.contentElWrapper = contentElWrapper) }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return getElement(this); }\n};\nlet accordionIds = 0;\nAccordion.style = {\n  ios: accordionIosCss,\n  md: accordionMdCss\n};\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nconst AccordionGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    /**\n     * Make sure focus is in the header, not the body, of the accordion. This ensures\n     * that if there are any interactable elements in the body, their keyboard\n     * interaction doesn't get stolen by the accordion. Example: using up/down keys\n     * in ion-textarea.\n     */\n    const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n    if (!activeAccordionHeader) {\n      return;\n    }\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex((a) => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find((v) => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter((v) => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true,\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"readonly\": [\"readonlyChanged\"]\n  }; }\n};\nAccordionGroup.style = {\n  ios: accordionGroupIosCss,\n  md: accordionGroupMdCss\n};\n\nexport { Accordion as ion_accordion, AccordionGroup as ion_accordion_group };\n"],"names":["r","registerInstance","h","H","Host","i","getElement","e","createEvent","chevronDown","c","config","b","getIonMode","raf","t","transitionEndAsync","a","addEventListener","removeEventListener","g","getElementRoot","accordionIosCss","accordionMdCss","Accordion","hostRef","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","get","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","_a","closest","expand","requestAccordionToggle","mode","headerPart","contentPart","class","getBoolean","onClick","toggleExpanded","id","part","ref","name","role","ios","md","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","ionChange","multiple","emit","getAccordions","accordions","accordion","ev","activeElement","activeAccordionHeader","accordionEl","closestGroup","startingIndex","findIndex","key","findNextAccordion","findPreviousAccordion","length","focus","disabledChanged","readonlyChanged","accordionExpand","groupValue","processedValue","valueExists","v","filter","prevAccordion","from","querySelectorAll","ion_accordion","ion_accordion_group"],"sourceRoot":"webpack:///"}