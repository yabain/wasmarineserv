{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-88bdeaae.js';\nimport { b as getIonMode, c as config } from './ionic-global-00475c3a.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-c313947a.js';\nimport { n as assert, s as shallowEqualStringMap } from './helpers-4d272360.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-7e1d3e32.js';\nimport { a as attachComponent } from './framework-delegate-ce4f806c.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages\n    .map((page) => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  })\n    .filter((v) => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-fa30a130.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    // Release swipe back gesture and transition.\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.transInstr.length = 0;\n    this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.insert(-1, component, componentProps, opts, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts,\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.removeIndex(-1, 1, opts, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const ti = {\n      removeStart: -1,\n      removeCount: -1,\n      opts,\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      ti.removeView = indexOrViewCtrl;\n      ti.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      ti.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(ti, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.removeIndex(1, -1, opts, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts,\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    opts !== null && opts !== void 0 ? opts : (opts = {});\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts,\n    }, done);\n  }\n  /**\n   * Called by the router to update the view.\n   *\n   * @param id The component tag.\n   * @param params The component params.\n   * @param direction A direction hint.\n   * @param animation an AnimationBuilder.\n   *\n   * @return the status.\n   * @internal\n   */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element,\n      });\n    }\n    let resolve;\n    const promise = new Promise((r) => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: (enteringEl) => {\n        let mark;\n        const p = new Promise((r) => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          },\n        });\n        return p;\n      },\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      // Look for a view matching the target in the view stack.\n      const viewController = this.views.find((v) => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /**\n   * Called by <ion-router> to retrieve the current component.\n   *\n   * @internal\n   */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    if (active) {\n      return {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element,\n      };\n    }\n    return undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  async getActive() {\n    return this.getActiveSync();\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  async getByIndex(index) {\n    return this.views[index];\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  async canGoBack(view) {\n    return this.canGoBackSync(view);\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  async getPrevious(view) {\n    return this.getPreviousSync(view);\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  /**\n   * Adds a navigation stack change to the queue and schedules it to run.\n   *\n   * @returns Whether the transition succeeds.\n   */\n  async queueTrns(ti, done) {\n    var _a, _b;\n    if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n      return false;\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return false;\n        }\n        if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return false;\n        }\n      }\n    }\n    // Normalize empty\n    if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  /**\n   * Consumes the next transition in the queue.\n   *\n   * @returns whether the transition is executed.\n   */\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now, executes the next instructions.\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  /** Executes all the transition instruction from the queue. */\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      let result;\n      if (requiresTransition) {\n        result = await this.transition(enteringView, leavingView, ti);\n      }\n      else {\n        // transition is not required, so we are already done!\n        // they're inserting/removing the views somewhere in the middle or\n        // beginning, so visually nothing needs to animate/transition\n        // resolve immediately because there's no animation that's happening\n        result = {\n          hasCompleted: true,\n          requiresTransition: false,\n        };\n      }\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    var _a, _b;\n    var _c;\n    const viewsLength = this.views.length;\n    (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n    (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  /**\n   * Returns the view that will be entered considering the transition instructions.\n   *\n   * @param ti The instructions.\n   * @param leavingView The view being left or undefined if none.\n   *\n   * @returns The view that will be entered, undefined if none.\n   */\n  getEnteringView(ti, leavingView) {\n    // The last inserted view will be entered when view are inserted.\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      return insertViews[insertViews.length - 1];\n    }\n    // When views are deleted, we will enter the last view that is not removed and not the view being left.\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  /**\n   * Adds and Removes the views from the navigation stack.\n   *\n   * @param enteringView The view being entered.\n   * @param leavingView The view being left.\n   * @param ti The instructions.\n   */\n  postViewInit(enteringView, leavingView, ti) {\n    var _a, _b, _c;\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    // Compute the views to remove.\n    const opts = ti.opts;\n    const { insertViews, removeStart, removeCount } = ti;\n    /** Records the view to destroy */\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = removeStart; i < removeStart + removeCount; i++) {\n        const view = this.views[i];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n    }\n    const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n    assert(finalNumViews >= 0, 'final balance can not be negative');\n    if (finalNumViews === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // Insert the new views in the stack.\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation ? (ani) => (this.sbAni = ani) : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction,\n    };\n  }\n  /**\n   * Inserts a view at the specified index.\n   *\n   * When the view already is in the stack it will be moved to the new position.\n   *\n   * @param view The view to insert.\n   * @param index The index where to insert the view.\n   */\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      assert(view.nav === this, 'view is not part of the nav');\n      // The view already in the stack, removes it.\n      views.splice(existingIndex, 1);\n      // and add it back at the requested index.\n      views.splice(index, 0, view);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      views.splice(index, 0, view);\n    }\n  }\n  /**\n   * Removes a view from the stack.\n   *\n   * @param view The view to remove.\n   */\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.pop({ direction: 'back', progressAnimation: true });\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = shouldComplete ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return h(\"slot\", null);\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return h(Host, { onClick: this.onClick });\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"names":["r","registerInstance","e","createEvent","h","i","getElement","H","Host","b","getIonMode","c","config","g","getTimeGivenProgression","n","assert","s","shallowEqualStringMap","l","lifecycle","t","transition","setPageHidden","d","LIFECYCLE_WILL_UNLOAD","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","delegate","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","gesture","enable","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","getBoolean","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","_destroy","destroy","length","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","removeIndex","indexOrViewCtrl","ti","removeStart","removeCount","removeView","startIndex","setPages","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","Object","assign","animationBuilder","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","_a","skipIfBusy","reject","router","canTransition","_b","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","success","failed","_c","viewsLength","viewControllers","removeEnd","destroyQueue","finalNumViews","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","pop","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///"}