{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-88bdeaae.js';\nimport { c as componentOnReady, q as debounce } from './helpers-4d272360.js';\nimport { b as getIonMode } from './ionic-global-00475c3a.js';\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","q","debounce","b","getIonMode","o","openURL","createColorClasses","Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getSegments","canProceed","setSegments","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","currentPath","URL","search","parsedPath","waitPromise","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link"],"sourceRoot":"webpack:///"}